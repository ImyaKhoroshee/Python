# Задача 1. Программа "Калькулятор кредитов" Рассчитайте месячные выплаты (m) и суммарную выплату (s) 
# по кредиту. О кредите известно, что он составляет n рублей, берется на y лет, под p 
# процентов. Месячные выплаты находятся по формуле: 
# m = (n * p * (1 + p)y) / (12 * ((1 + p)y – 1)), где p выражается в долях единицы, а не 
# процентах. Суммарная выплата представляет собой выплаты за все месяцы каждого года: 
# s = (m * 12) * y Запросите размер кредита в рублях и копейках, количество целых лет 
# (в годах) и процентную ставку в процентах с точностью до сотых. Распечатайте месячные 
# выплаты и сумму кредита в рублях и копейках.
# Пример:
# Введите сумму кредита (рубли и копейки): 543.25
# Введите срок кредита в годах (целое число): 2
# Введите процентную ставку в процентах с точностью до сотых (без знака "%"): 7.45
# Месячные выплаты составят 25.2 руб.
# Суммарная выплата равна 604.68 руб.

def credit_calculator(sum, years, percent):
    month_payment = sum*(percent*(1+percent)**years)/(12*((1+percent)**y-1))
    print(f'{round(month_payment, 2)} RUR')

    s = month_payment*12*years
    print(f'{round(s, 2)} RUR')

n = float(input('Сумма кредита: '))
y = int(input('Срок кредита: '))
p = 0.0745
credit_calculator(n, y, p)


# Программа "Блог. Начало." Создайте в программе словарь с историями о себе. В качестве ключа 
# сохраните название истории (строчными буквами), а в качестве значения - текст самой истории.
# В цикле выведите название истории прописными буквами (большими) и с новой строки текст 
# истории. Между историями выведите пустую строку.

# Пример:   ПЕРВАЯ Моя первая история. Короткая, но интересная.
#           РЫБАЛКА История про рыбалку. Уха, лодка, палатка и приключения на воде.
#           НОВОГОДНЯЯ Приключения в Новый год. Как мы встретили одноклассников через 25 лет и отправили их кормить рыб хлебом.

blog_dict = \
{
    'ПЕРВАЯ': 'Моя первая история. Короткая, но интересная.',
    'РЫБАЛКА' : 'История про рыбалку. Уха, лодка, палатка и приключения на воде.',
    'НОВОГОДНЯЯ': 'Приключения в Новый год. Как мы встретили одноклассников через 25 лет и отправили их кормить рыб хлебом.'
    }
for k, v in blog_dict.items():
    print(k)
    print(v)
    print()

# Задайте список из N элементов, заполненных числами из промежутка [-N, N]. Найдите 
# произведение элементов на указанных позициях. Каждая позиция хранится отдельной строкой в 
# файле file.txt.

from audioop import mul
from cmath import pi
import random

pos = ('1\n','3')
data = open('file.txt','w')
data.writelines(pos)
data.close()

N = int(input('Введите число: '))
spisok = []
for i in range(N):
    spisok.append(random.randint(-N,N+1))
print(spisok)
mult = 1
data = open('file.txt', 'r')
for i in data:
    mult = mult * spisok[int(i)]
data.close()
print(f'{spisok[int(pos[0])]} * {spisok[int(pos[1])]} = {mult}')

# Получить что-то конкретное (значение) из словаря. Только через код. Встроенной функции нет.

colors = {
    'bla': 100,
    101: 'blss'
}
def get_key(d, value):
    for k, v in d.items():
        if v == value:
            return k

print(get_key(colors, 100))
